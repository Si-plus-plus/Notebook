#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int MAX = 1e5+5;

int ntc, n, q, L, R, two;
int spr[31-__builtin_clz(MAX)+1][MAX];

void prints(){
    for (int i = 0; 1 << i <= n; i++) {
        for (int j = 0; j <= n - (1 << i); j++){
            printf ("%3d", spr[i][j]);
        }
        puts ("");
    }
}

int getl (int x){
    return 31-__builtin_clz(x);
}

void build (){
    int lim = floor (log2(n));
    for (int lay = 1; lay <= lim; lay++){
        for (int i = 0; i+(1<<lay) <= n; i++){
            spr[lay][i] = min (spr[lay-1][i], spr[lay-1][i + (1 << (lay-1))]);
        }
    }
}

int main() {
    scanf ("%d", &ntc);
    for (int _ = 1; _ <= ntc; _++){
        scanf ("%d %d", &n, &q);
        for (int i = 0; i < n; i++) scanf ("%d", &spr[0][i]);
        build();
        // prints();
        printf ("Case %d:\n", _);
        while (q--){
            scanf ("%d %d", &L, &R);
            L--, R--;
            two = 31-__builtin_clz(R-L+1);
            printf ("%d\n", min (spr[two][L], spr[two][R-(1<<two)+1]));
        }
    }

	return 0;
}
