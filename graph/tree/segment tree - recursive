#include <stdio.h>

using ll = long long;
const int MAX = 1e5+5;

int ntc, com;
int n, q, L, R, V;
ll sgt[5*MAX];
ll arr[MAX];

int m (int l, int r) {return (l+r)/2;}

void build (int par, int l, int r){
    if (l == r){
        sgt[par] = arr[l]; // ato r
        return;
    }

    int mid = m (l, r);
    build (par*2, l, mid);
    build (par*2+1, mid+1, r);
    sgt[par] = sgt[par*2] + sgt[par*2+1];
}

void update (int par, int l, int r, int pos, ll val){
    if (l > r) return;
    if (l == r) {
         if (val >= 0) sgt[par] += val;
         else sgt[par] = 0;
         return;
     }

    int mid = m (l,r);
    if (pos <= mid) update (2*par, l, mid, pos, val);
    else update (2*par+1, mid+1, r, pos, val);

    sgt[par] = sgt[2*par] + sgt[2*par+1];
}

ll query (int par, int l, int r, int rngL, int rngR){
    if (r < rngL || rngR < l) return 0;
    if (rngL <= l && r <= rngR) return sgt[par];

    int mid = m(l, r);
    ll left = query (2*par, l, mid, rngL, rngR);
    ll right = query (2*par+1, mid+1, r, rngL, rngR);

    return left + right;
}


int main() {
    scanf ("%d", &ntc);
    for (int _ = 1; _ <= ntc; _++){
        scanf ("%d %d", &n, &q);
        for (int i = 1; i <= n; i++) scanf ("%lld", &arr[i]);
        build(1, 1, n);

        printf ("Case %d:\n", _);
        while (q--){
            scanf ("%d", &com);
            if (com == 1) {
                scanf ("%d", &L);
                ++L;
                printf ("%lld\n", query (1,1,n,L,L));
                update(1, 1, n, L, -1);
            }
            else if (com == 2){
                scanf ("%d %d", &L, &V);
                ++L;
                update(1, 1, n, L, V);
            }
            else {
                scanf ("%d %d", &L, &R);
                ++L; ++R;
                printf ("%lld\n", query (1,1,n,L,R));
            }
        }
    }

	return 0;
}
