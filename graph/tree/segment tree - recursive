#include <stdio.h>

using ll = long long;
const int MAX = 1e5+5;

int ntc, com;
int n, q, L, R, V;
ll sgt[2*MAX];

void build (){
    for (int i = n-1; i > 0; i--)
        sgt[i] = sgt[i << 1] + sgt[i << 1|1];
}

void update (int pos, int val){
    pos += n;
    sgt[pos] = (val >= 0)*(sgt[pos] + val);
    for (;pos > 1; pos >>= 1) sgt[pos >> 1] = sgt[pos] + sgt[pos^1];
}

ll query (int l, int r){
    ll ret = 0;
    l += n; r += n;
    for (; l < r; l >>= 1, r >>= 1){
        if (l&1) ret += sgt[l++]; //right
        if (r&1) ret += sgt[--r]; //right
    }
    return ret;
}

int main() {
    scanf ("%d", &ntc);
    for (int _ = 1; _ <= ntc; _++){
        scanf ("%d %d", &n, &q);
        for (int i = 0; i < n; i++) scanf ("%lld", &sgt[n+i]);
        build();

        printf ("Case %d:\n", _);
        while (q--){
            scanf ("%d", &com);
            if (com == 1) {
                scanf ("%d", &L);
                printf ("%lld\n", sgt[n+L]);
                update(L, -1);
            }
            else if (com == 2){
                scanf ("%d %d", &L, &V);
                update(L, V);
            }
            else {
                scanf ("%d %d", &L, &R);
                printf ("%lld\n", query (L,R+1));
            }
        }
    }

	return 0;
}
